#!/usr/bin/env python
PKG = 'radar_awr'
import roslib; roslib.load_manifest(PKG)

import rospy
from rospy.numpy_msg import numpy_msg
from radar_awr.msg import RadarFrame
import numpy
import multiprocessing as mp
import capture_helper as rec

def talker(proc_rec, rec_queue):
    pub = rospy.Publisher('radar_frame', numpy_msg(RadarFrame), queue_size=10)
    rospy.init_node('radar_pub', anonymous=True) #without anonymous?
    r = rospy.Rate(10) # 10hz
    while not rospy.is_shutdown():
        ### Das ersetzen??? ###
        try:
            real, im = rec_queue.get(2)
        except:
            print("queue timed out")
        shape = numpy.array([64,8, 256])
        print("I get stuck in pub before pub")
        pub.publish(shape, real, im)
        rospy.loginfo("pub %d", real[0])
        r.sleep()
    rec.terminate_proc(proc_rec, rec_queue)

if __name__ == '__main__':
    proc_rec, queue = rec.radar_capture()
    talker(proc_rec, queue)
